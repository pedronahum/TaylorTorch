name: Ubuntu CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-24.04

    env:
      SWIFT_VERSION: swift-DEVELOPMENT-SNAPSHOT-2025-10-02-a
      SWIFT_PLATFORM: ubuntu24.04
      PYTORCH_VERSION: v2.8.0
      PYTORCH_INSTALL_DIR: /opt/pytorch
      SWIFT_TOOLCHAIN_DIR: /usr
      CC: clang
      CXX: clang++

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          binutils \
          git \
          gnupg2 \
          libc6-dev \
          libcurl4-openssl-dev \
          libedit2 \
          libgcc-13-dev \
          libpython3-dev \
          libsqlite3-0 \
          libstdc++-13-dev \
          libxml2-dev \
          libz3-dev \
          pkg-config \
          python3-lldb \
          tzdata \
          unzip \
          zip \
          zlib1g-dev \
          wget \
          curl \
          ca-certificates

    - name: Install PyTorch build dependencies
      run: |
        sudo apt-get install -y \
          build-essential \
          cmake \
          libgoogle-glog-dev \
          libgtest-dev \
          libomp-17-dev \
          libleveldb-dev \
          liblmdb-dev \
          libopencv-dev \
          libopenmpi-dev \
          libsnappy-dev \
          libprotobuf-dev \
          openmpi-bin \
          openmpi-doc \
          protobuf-compiler \
          python3 \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-yaml \
          libgflags-dev \
          libc++-17-dev \
          libc++abi-17-dev \
          ninja-build

    - name: Install Python packages for PyTorch
      run: |
        pip3 install --break-system-packages \
          numpy \
          pyyaml \
          typing_extensions \
          sympy \
          cffi \
          cmake

    - name: Cache Swift toolchain
      id: cache-swift
      uses: actions/cache@v4
      with:
        path: /tmp/swift-toolchain
        key: swift-${{ env.SWIFT_VERSION }}-${{ env.SWIFT_PLATFORM }}

    - name: Download and install Swift
      if: steps.cache-swift.outputs.cache-hit != 'true'
      run: |
        SWIFT_URL=https://download.swift.org/development/ubuntu2404/${SWIFT_VERSION}/${SWIFT_VERSION}-${SWIFT_PLATFORM}.tar.gz
        wget -q $SWIFT_URL
        mkdir -p /tmp/swift-toolchain
        tar xzf ${SWIFT_VERSION}-${SWIFT_PLATFORM}.tar.gz -C /tmp/swift-toolchain --strip-components=1
        rm ${SWIFT_VERSION}-${SWIFT_PLATFORM}.tar.gz

    - name: Install Swift to system
      run: |
        sudo cp -r /tmp/swift-toolchain/* /usr/
        sudo mkdir -p /usr/lib/swift
        sudo chmod -R o+r /usr/lib/swift
        swift --version

    - name: Cache PyTorch build
      id: cache-pytorch
      uses: actions/cache@v4
      with:
        path: /opt/pytorch
        key: pytorch-${{ env.PYTORCH_VERSION }}-ubuntu-clang-${{ hashFiles('.github/workflows/ubuntu-ci.yml') }}

    - name: Clone PyTorch
      if: steps.cache-pytorch.outputs.cache-hit != 'true'
      run: |
        git clone --recursive https://github.com/pytorch/pytorch.git /tmp/pytorch
        cd /tmp/pytorch
        git checkout ${PYTORCH_VERSION}
        git submodule sync
        git submodule update --init --recursive

    - name: Build PyTorch
      if: steps.cache-pytorch.outputs.cache-hit != 'true'
      run: |
        cd /tmp/pytorch
        mkdir -p build
        cd build
        CC=clang CXX=clang++ cmake .. \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DBUILD_SHARED_LIBS=ON \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/opt/pytorch \
          -DBUILD_PYTHON=OFF \
          -DBUILD_TEST=OFF \
          -DBUILD_CAFFE2=ON \
          -DUSE_DISTRIBUTED=OFF \
          -DUSE_MPS=OFF \
          -DUSE_NNPACK=ON \
          -DUSE_XNNPACK=ON \
          -DUSE_OPENMP=ON \
          -DUSE_SYSTEM_BLAS=ON \
          -DUSE_CUDA=OFF \
          -DPYTHON_EXECUTABLE=$(which python3)
        cmake --build . --target install -j$(nproc)

    - name: Fix PyTorch permissions
      if: steps.cache-pytorch.outputs.cache-hit != 'true'
      run: |
        sudo mkdir -p /opt/pytorch
        sudo cp -r /tmp/pytorch/build/install/* /opt/pytorch/ || true

    - name: Set up environment
      run: |
        echo "PYTORCH_INSTALL_DIR=/opt/pytorch" >> $GITHUB_ENV
        echo "SWIFT_TOOLCHAIN_DIR=/usr" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=/opt/pytorch/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "/opt/pytorch/lib" | sudo tee -a /etc/ld.so.conf.d/pytorch.conf
        sudo ldconfig

    - name: Build TaylorTorch
      run: |
        swift build -c release

    - name: Run tests
      run: |
        swift test -c release

    - name: Build examples
      run: |
        swift build -c release --product MNISTExample
        swift build -c release --product ANKIExample
        swift build -c release --product KARATEExample
